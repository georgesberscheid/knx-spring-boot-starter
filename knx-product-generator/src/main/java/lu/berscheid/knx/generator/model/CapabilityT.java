//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.05 at 10:56:00 PM CEST 
//


package lu.berscheid.knx.generator.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Capability_t.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="Capability_t">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="AddDeleteDevice"/>
 *     &lt;enumeration value="GroupCommunicationEvents"/>
 *     &lt;enumeration value="GroupCommunicationLimits"/>
 *     &lt;enumeration value="TransferParameters"/>
 *     &lt;enumeration value="ProjectCheck"/>
 *     &lt;enumeration value="Printing"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "Capability_t")
@XmlEnum
public enum CapabilityT {

    @XmlEnumValue("AddDeleteDevice")
    ADD_DELETE_DEVICE("AddDeleteDevice"),
    @XmlEnumValue("GroupCommunicationEvents")
    GROUP_COMMUNICATION_EVENTS("GroupCommunicationEvents"),
    @XmlEnumValue("GroupCommunicationLimits")
    GROUP_COMMUNICATION_LIMITS("GroupCommunicationLimits"),
    @XmlEnumValue("TransferParameters")
    TRANSFER_PARAMETERS("TransferParameters"),
    @XmlEnumValue("ProjectCheck")
    PROJECT_CHECK("ProjectCheck"),
    @XmlEnumValue("Printing")
    PRINTING("Printing");
    private final String value;

    CapabilityT(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CapabilityT fromValue(String v) {
        for (CapabilityT c: CapabilityT.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
