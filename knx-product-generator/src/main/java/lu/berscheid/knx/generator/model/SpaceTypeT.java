//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.10.05 at 10:56:00 PM CEST 
//


package lu.berscheid.knx.generator.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SpaceType_t.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SpaceType_t">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Building"/>
 *     &lt;enumeration value="BuildingPart"/>
 *     &lt;enumeration value="Floor"/>
 *     &lt;enumeration value="Room"/>
 *     &lt;enumeration value="DistributionBoard"/>
 *     &lt;enumeration value="Stairway"/>
 *     &lt;enumeration value="Corridor"/>
 *     &lt;enumeration value="Area"/>
 *     &lt;enumeration value="Ground"/>
 *     &lt;enumeration value="Segment"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SpaceType_t")
@XmlEnum
public enum SpaceTypeT {

    @XmlEnumValue("Building")
    BUILDING("Building"),
    @XmlEnumValue("BuildingPart")
    BUILDING_PART("BuildingPart"),
    @XmlEnumValue("Floor")
    FLOOR("Floor"),
    @XmlEnumValue("Room")
    ROOM("Room"),
    @XmlEnumValue("DistributionBoard")
    DISTRIBUTION_BOARD("DistributionBoard"),
    @XmlEnumValue("Stairway")
    STAIRWAY("Stairway"),
    @XmlEnumValue("Corridor")
    CORRIDOR("Corridor"),
    @XmlEnumValue("Area")
    AREA("Area"),
    @XmlEnumValue("Ground")
    GROUND("Ground"),
    @XmlEnumValue("Segment")
    SEGMENT("Segment");
    private final String value;

    SpaceTypeT(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SpaceTypeT fromValue(String v) {
        for (SpaceTypeT c: SpaceTypeT.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
